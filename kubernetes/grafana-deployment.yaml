apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - image: grafana/grafana:9.5.2
        imagePullPolicy: IfNotPresent
        name: grafana
        ports:
        - containerPort: 3000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/grafana/provisioning/dashboards
          name: grafana-dash-providers
        - mountPath: /var/lib/grafana/dashboards/default
          name: grafana-dashboards
        - mountPath: /var/lib/grafana/dashboards/log-monitor
          name: grafana-dashboard-log-monitor
        - mountPath: /etc/grafana/provisioning/datasources
          name: grafana-datasources
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: grafana-dash-providers
        name: grafana-dash-providers
      - configMap:
          defaultMode: 420
          name: grafana-dashboards
        name: grafana-dashboards
      - configMap:
          defaultMode: 420
          name: grafana-dashboard-log-monitor
        name: grafana-dashboard-log-monitor
      - configMap:
          defaultMode: 420
          name: grafana-datasources
        name: grafana-datasources

